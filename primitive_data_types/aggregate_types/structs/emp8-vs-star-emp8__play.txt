//-----------------
//-----------------
/* ----------GOLang->GOLearn

emp8 vs. *emp8  20210922_211626

iabic :-) SDNScottie : structs  20210922_181356
, aggregate types  20210922_181330
, primitive data types  20210922_175129
, A-Z: tutorials/examples  20210307_102425
, GOLang  20210209_210139
, Languages, Computer/Natural

{{c1::A}} KW 38

------------/GOLang->GOLearn */

//=================
//=TOP: 
//=================

/* ----------GOPlay Cisgo :-D

https://www.geeksforgeeks.org/structures-in-golang/

The Golang gives us the option to use emp8.firstName instead of the explicit dereference (*emp8).firstName to access the firstName field. Example to show this is following:


Q: What's so great about GOLang ?
A: Multi-(CORE & THREAD), CONCURRENT, (DevSEC/RESTSec/Cisgo)-Ready, Go Scottie Go.. twitter@cisgoio!

------------/GOPlay twitter@cisgoio :-D */

//=================
//=SRC: 
//=================

// Golang program to illustrate
// the pointer to struct
package main

import "fmt"

// Defining a structure
type Employee struct {
	firstName, lastName string
	age, salary		 int
}

// Main Function
func main() {

	// taking pointer to struct
	emp8 := &Employee{"Sam", "Anderson", 55, 6000}

	// emp8.firstName is used to access
	// the field firstName
	fmt.Println("First Name: ", emp8.firstName)
	fmt.Println("Age: ", emp8.age)
}
